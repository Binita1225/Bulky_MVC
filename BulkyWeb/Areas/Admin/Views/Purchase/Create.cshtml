@model BulkyBook.Models.ViewModels.PurchaseVM

@{
    ViewData["Title"] = "Create Purchase";
}


<h2>Create Purchase</h2>

<form asp-action="Create" method="post">


    <div class="form-group">
        <label asp-for="PurchaseMaster.CustomerName"></label>
        <input asp-for="PurchaseMaster.CustomerName" class="form-control" />
        <span asp-validation-for="PurchaseMaster.CustomerName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PurchaseMaster.CustomerEmail"></label>
        <input asp-for="PurchaseMaster.CustomerEmail" class="form-control" />
        <span asp-validation-for="PurchaseMaster.CustomerEmail" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PurchaseMaster.CustomerNo"></label>
        <input asp-for="PurchaseMaster.CustomerNo" class="form-control" />
        <span asp-validation-for="PurchaseMaster.CustomerNo" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PurchaseMaster.CustomerAddress"></label>
        <input asp-for="PurchaseMaster.CustomerAddress" class="form-control" />
        <span asp-validation-for="PurchaseMaster.CustomerAddress" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PurchaseMaster.TransactionDate"></label>
        <input asp-for="PurchaseMaster.TransactionDate" class="form-control" type="date" />
        <span asp-validation-for="PurchaseMaster.TransactionDate" class="text-danger"></span>
    </div>


    <hr />

    <h4>Purchase Detail</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Stock</th>
                <th>Rate</th>
                <th>RateUpto50</th>
                <th>RateAbove50</th>
                <th>RateAbove100</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="details-body">
            <tr>
                <td>
                    <select asp-for="PurchaseDetail[0].ItemId" class="form-control product-dropdown">
                        <option value="" selected>Select</option>
                        @foreach (var product in Model.Products)
                        {
                            <option value="@product.Id" data-rate="@product.Rate"
                                    data-price="@product.RateUpto50"
                                    data-above50="@product.RateAbove50"
                                    data-hundred="@product.RateAbove100"
                                    data-stock="@product.Stock">
                                @product.Name
                            </option>
                        }
                    </select>


                </td>
                <td>
                    <input type="text" class="form-control stock" asp-for="PurchaseDetail[0].Stock" readonly />

                </td>

                <td>
                    <input type="text" class="form-control rate" asp-for="PurchaseDetail[0].Rate" readonly />

                </td>
                <td>
                    <input type="text" class="form-control price" asp-for="PurchaseDetail[0].RateUpto50" readonly />

                </td>
                <td>
                    <input type="text" class="form-control above50" asp-for="PurchaseDetail[0].RateAbove50" readonly />

                </td>
                <td>
                    <input type="text" class="form-control hundred" asp-for="PurchaseDetail[0].RateAbove100" readonly />

                </td>

                <td>
                    <input type="number" class="form-control quantity" asp-for="PurchaseDetail[0].Quantity" />
                </td>
                <td>
                    <input type="text" class="form-control total" asp-for="PurchaseDetail[0].Total" readonly />
                </td>
                <td>
                    <button type="button" class="btn btn-danger remove-row"> Remove</button>
                </td>
            </tr>

        </tbody>
    </table>

    <button type="button" class="btn btn-primary" id="add-row"> Add Row</button>
    <hr />
    <div>
        <button type="submit" class="btn btn-success">Submit</button>
        <a asp-controller="Purchase" asp-action="Index" class="btn">
            Back to List
        </a>
    </div>

</form>


@section Scripts {
    @{
                                <partial name="_ValidationScriptsPartial" />
    }

    <script>
        $(document).ready(function () {
            let rowCount = 1;

            $("#add-row").click(function () {
                let row = $("#details-body tr:first").clone();
                row.find("input, select").val("");
                row.find("select").attr("name", `PurchaseDetail[${rowCount}].ItemId`);

                row.find(".rate").attr("name", `PurchaseDetail[${rowCount}].Rate`);
                row.find(".price").attr("name", `PurchaseDetail[${rowCount}].RateUpto50`);
                row.find(".above50").attr("name", `PurchaseDetail[${rowCount}].RateAbove50`);
                row.find(".hundred").attr("name", `PurchaseDetail[${rowCount}].RateAbove100`);
                row.find(".quantity").attr("name", `PurchaseDetail[${rowCount}].Quantity`);
                row.find(".total").attr("name", `PurchaseDetail[${rowCount}].Total`);
                $("#details-body").append(row);
                rowCount++;
            });

            $(document).on("click", ".remove-row", function () {
                $(this).closest("tr").remove();
            });

            $(document).on("change", ".product-dropdown", function () {
                // Get the rate from the selected product
                var rate = $(this).find(":selected").data("rate");
                var price = $(this).find(":selected").data("price");
                var above50 = $(this).find(":selected").data("above50");
                var hundred = $(this).find(":selected").data("hundred");
                $(this).closest("tr").find(".rate").val(rate); // Set the rate in the input field
                $(this).closest("tr").find(".price").val(price); // Set the rate in the input field
                $(this).closest("tr").find(".above50").val(above50); // Set the rate in the input field
                $(this).closest("tr").find(".hundred").val(hundred); // Set the rate in the input field
                var stock = $(this).find(":selected").data("stock");
                $(this).closest("tr").find(".stock").val(stock);

            });



            $(document).on("input", ".quantity", function () {
                let quantity = parseFloat($(this).val()) || 0;
                var rate = 0;
                if (quantity < 50) {
                    rate = parseFloat($(this).closest("tr").find(".rate").val()) || 0;
                }
                else if (quantity > 50 && quantity < 100) { 
                    rate = parseFloat($(this).closest("tr").find(".above50").val()) || 0;
                }
                else {
                    rate = parseFloat($(this).closest("tr").find(".hundred").val()) || 0;
                }

                let total = quantity * rate;
                $(this).closest("tr").find(".total").val(total);
            });
        });
    </script>
}

